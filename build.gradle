plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'idea'
	id 'com.google.cloud.tools.jib' version '2.7.0'
}

group = 'com.fdobrotv'
version = '0.5.0'
sourceCompatibility = '15'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "2020.0.0-M5")
}

dependencies {
	//Gateway
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'

	//Circuit breaker implementation
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	// If you hate the reactive programming, uncomment this ↓ and comment out this ↑
	//	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

	//Discovery service client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	//Spring Retry
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	//Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//TODO: Tracing
//	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

	//Distributed configuration
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	//For legacy support of the bootstrap.yml instead of Vault
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	//TODO: Client-side load balancer
//	implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation "io.springfox:springfox-boot-starter:3.0.0"

	//Testing
	compile("org.springframework.cloud:spring-cloud-starter-contract-stub-runner"){
		exclude group: "org.springframework.boot", module: "spring-boot-starter-web"
	}
	testImplementation("org.springframework.boot:spring-boot-starter-test")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

jib {
	from {
		image = 'openjdk:15'
	}
	to {
		image = "fdobrotv/$rootProject.name:$version"
		tags = ["$version", 'latest']
	}
}